
// geometry.pwc

// Point

struct Point {
  Double x;
  Double y;
}

fn Void init(Point self, Double x, Double y) {
  self.x = x;
  self.y = y;
}

fn Double distance(Point self, Point other) {
  let dx = abs(self.x - other.x);
  let dy = abs(self.y - other.y);
  return sqrt(pow(dx, 2) + pow(dy, 2));
}

// Circle

struct Circle {
  Point center;
  Double radius;
}

fn Void init(Circle self, Double radius) {
  init(self, new Point(0, 0), radius);
}

fn Void init(Circle self, Point center, Double radius) {
  self.center = center;
  self.radius = radius;
}

fn Double perimeter(Circle self) {
  return 2 * PI * self.radius;
}

fn Double area(Circle self) {
  return PI * pow(self.radius, 2);
}

// Rect

struct Rect {
  Point center;
  Double width;
  Double height;
}

fn Void init(Rect self, Double width, Double height) {
  init(self, new Point(0, 0), width, height);
}

fn Void init(Rect self, Point center, Double width, Double height) {
  self.center = center;
  self.width = width;
  self.height = height;
}

fn Double perimeter(Rect self) {
  return 2 * (self.width + self.height);
}

fn Double area(Rect self) {
  return self.width * self.height;
}

// Shape

interface Area {
  Double area(Self self);
}

interface Perimeter {
  Double perimeter(Self self);
}

type Shape = Area + Perimeter;

fn Void main() {
  // Points
  let p1 = new Point(-3, -4);
  let p2 = new Point(3, 4);
  let d = p1.distance(p2);
  println(d); // 10

  // Circles
  let c1 = new Circle(3);
  let c2 = new Circle(new Point(1, 2), 3);
  let perim = c1.perimeter();
  println(perim); // 18.849556
  let area = c2.area();
  println(area); // 28.274334

  // Rects
  let r1 = new Rect(3, 4);
  let r2 = new Rect(new Point(1, 2), 3, 4);
  let perim = r1.perimeter();
  println(perim); // 14
  let area = r2.area();
  println(area); // 12

  // Shape
  var Shape shape;
  shape = c1;
  println(shape.perimeter()); // 18.849556
  println(shape.area()); // 28.274334
  shape = r1;
  println(shape.perimeter()); // 14
  println(shape.area()); // 12
}
